addons:
  apt:
    packages:
      - xmlsec1

services:
  - docker
  - mongodb

language: python
install:
  - pip install tox
  - pip install tox-travis

script:
  - tox

jobs:
  include:
    - python: 3.6
    - python: 3.7
    - python: 3.8
    - python: 3.9-dev
    - python: pypy3

    - stage: Expose env-var information
      script: |
        cat <<EOF
        TRAVIS_BUILD_ID: $TRAVIS_BUILD_ID
        TRAVIS_BUILD_NUMBER: $TRAVIS_BUILD_NUMBER
        TRAVIS_JOB_ID: $TRAVIS_JOB_ID
        TRAVIS_JOB_NUMBER: $TRAVIS_JOB_NUMBER

        TRAVIS_REPO_SLUG: $TRAVIS_REPO_SLUG
        TRAVIS_BRANCH: $TRAVIS_BRANCH
        TRAVIS_COMMIT: $TRAVIS_COMMIT
        TRAVIS_TAG: $TRAVIS_TAG

        TRAVIS_PULL_REQUEST: $TRAVIS_PULL_REQUEST
        TRAVIS_PULL_REQUEST_BRANCH: $TRAVIS_PULL_REQUEST_BRANCH
        TRAVIS_PULL_REQUEST_SHA: $TRAVIS_PULL_REQUEST_SHA
        TRAVIS_PULL_REQUEST_SLUG: $TRAVIS_PULL_REQUEST_SLUG

        DOCKER_REPO: $DOCKER_REPO
        DOCKER_TAG_COMMIT: $DOCKER_TAG_COMMIT
        DOCKER_TAG_BRANCH: $DOCKER_TAG_BRANCH
        DOCKER_TAG_PR_NUM: $DOCKER_TAG_PR_NUM
        DOCKER_TAG_GITTAG: $DOCKER_TAG_GITTAG
        DOCKER_TAG_LATEST: $DOCKER_TAG_LATEST
        EOF

    - stage: Build docker image by commit and deploy on DockerHub
      script:
        - set -e
        - docker build -f Dockerfile -t "$DOCKER_TAG_COMMIT" .
        - echo "$DOCKER_PASS" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - docker push "$DOCKER_REPO"

    - stage: Tag docker image with branch name
      if: branch IS present
      script:
        - set -e
        - docker pull "$DOCKER_TAG_COMMIT"
        - docker tag "$DOCKER_TAG_COMMIT" "$DOCKER_TAG_BRANCH"
        - echo "$DOCKER_PASS" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - docker push "$DOCKER_REPO"

    - stage: Tag docker image with pull request number
      if: type = pull_request
      script:
        - set -e
        - docker pull "$DOCKER_TAG_COMMIT"
        - docker tag "$DOCKER_TAG_COMMIT" "$DOCKER_TAG_PR_NUM"
        - echo "$DOCKER_PASS" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - docker push "$DOCKER_REPO"

    - stage: Tag docker image with git-tag
      if: tag IS present
      script:
        - set -e
        - docker pull "$DOCKER_TAG_COMMIT"
        - docker tag "$DOCKER_TAG_COMMIT" "$DOCKER_TAG_GITTAG"
        - echo "$DOCKER_PASS" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - docker push "$DOCKER_REPO"

    - stage: Tag docker image as latest
      if: branch = master
      script:
        - set -e
        - docker pull "$DOCKER_TAG_COMMIT"
        - docker tag "$DOCKER_TAG_COMMIT" "$DOCKER_TAG_LATEST"
        - echo "$DOCKER_PASS" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - docker push "$DOCKER_REPO"

    - stage: Deploy new release on GitHub
      if: tag IS present
      script: skip
      deploy:
        - provider: releases
          api_key:
            secure: EOM9qDlyGQrD6NXs8KKMNr2htFXU/H47tO051aA3RKWQrEk7paLXYTDSbQiEq3W9yLg+fifDb0qVqAcFhnV4OWf5ArP++khjaiKQCHYoTaoKIRrTch+12Unq22FEgNj0SYd3HX+CKkG2WpyMoBQAiChgaouDnYIPOvCoqfCxiJzj5e/l5Qomt31smUgZSYhqeDPvX0lN6LP47OLrzsEGDvVxz/fb+EMK3mkCppgPwsB2zy849dER7ofHD6uJiYhY3jP4oCHDBv6GdzqxgMIyDD4zJYh9qCfy1kAwOwc7CYInrELk8GK+YwLFRKMXdTMHu4nYUTgTAJeiXgX6n7oEUfvj4ip+UJ2MfsLdaX7MmgRb2sVStlYjqLWgVR1sZThKmDTH1SzztmZFcNjXBg5Yvs8zPKe+955AoL/EG+pu0ZapFTIrsW7Wq7dCSiXhUkdJ3E/3RZqawqDhTHmrQEiG2j4N2B90SeK7TcXncr7TxaQMwjRpUpkDHmNQPMW3TEHyjEVlTKjzeCmvJEzu/n2oDR12kD6FL5oh4lkMIzIIQqVtp09cB9IJXEO0ww3elIbjZPhMASOocwvoFWM/m9ZTH8i2NjulWuIsnPj9AMmQ8hryR+nqSmkK942D+/9W0/ZHX4rzZ4/6hpEwAi+2+BNnS9yPk1zP4LNMy5FA4NwCV14=
          on:
            repo: IdentityPython/SATOSA
            tags: true

    - stage: Deploy new release on PyPI
      if: tag IS present
      script: skip
      deploy:
        - provider: pypi
          distributions: sdist bdist_wheel
          user: Lundberg
          password:
            secure: NwkpOakaeJjErjTF4Y5MWeHzMvkxYZqrBFdRkzfenVfkWsomuyy553A691d3lc1+oREsh1fJJLjpZQYxTLUFIHOUmt/9zr02rFfguzj7hEYfWF8wHBXG6YSWv6T3aCA4RTMXvvzv9cHf1zfxh0fS7kgc+NRMAnd01diVLfYpBciLgmQ31J4mlwShp8yBQUoRBIvzSdzrgjr0TzCQZXB9xM6R2t/oJgXLo6Zz8dTzqq3De9nOU/1P2ZHLxodDikuFdu2/0CjoDgFXB0KnGKGKmJ6G1WMCVvi7abY7smmGA3s4a4NVL7Cirx6VwIj79PsAcgupr2iBAQk/GsPffzdpLtIrBek9u//p84hxrj/IaJWgPOeKeD7+r2Kc2g0r2dQjaM+9MqBx9/lC57xJRX/JHLQWirXfCucB9YyPun5I13Sf3hArkssQy/Jvd2aLFZ885BTfow6TAwl1ud+UPeauvEj6myKO98sko/3Y521EGXRofLGaPokLyPjI/3I4N4jCvw8m86eZAjjIhPFL7JKHf8OVc5gQCYQy3kxiF5wyvbfOeMBp0sk9UvJOrWvBEXFrimAZPu8o8T5WtlQAV02q7rxUwhMd+fpnbGewsl7Ob6eE4rGVrfWQIb86wOHbbJk3lCwPytjEFEI2bdUfRUFcrWxhC040hRP0gzVKLa+nBHM=
          on:
            repo: IdentityPython/SATOSA
            tags: true

env:
  global:
    - DOCKER_REPO: "satosa/satosa"
    - DOCKER_TAG_COMMIT: "${DOCKER_REPO}:${TRAVIS_COMMIT}"
    - DOCKER_TAG_BRANCH: "${DOCKER_REPO}:${TRAVIS_BRANCH}"
    - DOCKER_TAG_PR_NUM: "${DOCKER_REPO}:PR${TRAVIS_PULL_REQUEST}"
    - DOCKER_TAG_GITTAG: "${DOCKER_REPO}:${TRAVIS_TAG:-NO_TAG}"
    - DOCKER_TAG_LATEST: "${DOCKER_REPO}:latest"
